// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/Shooting/PIDShoot.h"
#include "Commands/Shooting/AutoShoot.h"
#include "Commands/Climb.h"
#include "Commands/RunIntake.h"
#include "Commands/Slappy.h"
#include "Commands/FlipChassis.h"
#include "Commands/Shooting/ManualRamp.h"
#include "Commands/Shooting/PIDGoalRotate.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
	// Process operator interface input here.
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
	xboxController.reset(new Joystick(0));

	// SmartDashboard Buttons
	aButton.reset(new JoystickButton(xboxController.get(), 1));
	bButton.reset(new JoystickButton(xboxController.get(), 2));
	xButton.reset(new JoystickButton(xboxController.get(), 3));
	yButton.reset(new JoystickButton(xboxController.get(), 4));
	leftBumper.reset(new JoystickButton(xboxController.get(), 5));
	rightBumper.reset(new JoystickButton(xboxController.get(), 6));
	backButton.reset(new JoystickButton(xboxController.get(), 7));
	startButton.reset(new JoystickButton(xboxController.get(), 8));

	rightBumper->WhileHeld(new PIDShoot());
	leftBumper->WhileHeld(new AutoShoot());
	//aButton->WhileHeld(new Climb());
	bButton->ToggleWhenPressed(new Slappy());
	aButton->ToggleWhenPressed(new RunIntake());
	yButton->WhenPressed(new FlipChassis());
	backButton->WhenPressed(new ManualRamp(false));
	startButton->WhenPressed(new ManualRamp(true));
	xButton->WhenPressed(new PIDGoalRotate());
}


std::shared_ptr<Joystick> OI::getXboxController() {
	return xboxController;
}
double OI::getAxis(int a) {
	return xboxController->GetRawAxis(a);
}

double OI::getLeftXAxis() {
	return -getAxis(0);
}

double OI::getLeftYAxis() {
	return getAxis(1);
}

double OI::getRightXAxis() {
	return getAxis(4);
}

double OI::getRightYAxis() {
	return getAxis(5);
}

double OI::getTriggerAxis(){
	return getAxis(3)-getAxis(2);
}
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
